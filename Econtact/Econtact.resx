<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAA+1JREFUeF7t
        ncFqE1EYhftSyQOke3HrqiK49A3c+QCKG5d2qehat7quUN/AqiCo6CpVSrXx/un5nZKcNLkz99yZNv+B
        DyS1nJnvNMm0lOlOJBKJRCKRSCQSiUQikUgkkpvp7nhvOhk9ne6ODtO/Z9eTdG7zcxzv4bT7z/Hu+OZ0
        Mv6wfLDXnHTOdu7Q0E/SV8NDenDbRHIAHXWTih/RA9pGkgtoqZP5yw47kC2m6svRVr7mryM5gR5t0tPt
        Nj2AoM6zIF2K7bPywBjtQ5Mu1/s6vyujQ2jShRcHDjTpwkqDBmjShZUGDdCkCysNGqBJF1YaNECTLqw0
        aIAmXVhpV45vTOjjVxFo0oWVdsHk/z04mJ2+eEY/ruDXnVtz2Me6Ak26sNK2uPzZ959zaoxg4s+OPs1R
        jABNurDSNizKrzGCy/cuxQjQpAsrzWWVfEcxwqJ8p/QI0KQLK81hnXyn5Air5DslR4AmXVhpDidPHlMJ
        jBIjrJPvlBoBmnRhpbmcvnxOJTC6jLCpfOPs4+ftGcBQj9CHfAOadGGlbVGN0Jd8A5p0YaVdKD1Cn/IN
        aNKFlXal1Ah9yzegSRdWWoKuIwxBvgFNurDSUrQdYSjyDWjShZWWJHeEIck3oEkXVlqanBHOvnyljy9S
        Q74BTbqwUgU5I8y+/eCPg1ryDWjShZWqKDFCTfkGNOnCSpV0GaG2fAOadGGlatqM0Id8A5p0YaU1OH39
        aln2CuyNuQ/5BjTpwkrVmMz5peaaN9uLbPJjCwXQpAsrVfJfvssd+AjQpAsrVbEk3xnwCNCkCytVsFK+
        M9ARoEkXVlqatfKdAY4ATbqw0pJsLD9hl5o5V0c1RoAmXVhpKXLl2/+3z8v5PkE9AjTpwkpL0Fa+M5QR
        oEkXVtqVrvKdIYwATbqw0i6Uku/0PQI06cJK21JavtPnCNCkCyttg0q+09cI0KQLK81FLd/pYwRo0oWV
        5lBLvlN7BGjShZXm8OftG3ryi5SQ72w6wsmD+/Tzc4AmXVhpDue/nv6OCnBKynfWjVBCvgFNurDSXC4b
        QSHfWTVCKfkGNOnCStvARlDKdxZHKCnfgCZdWGlbLo5QQ77jI5SWb0CTLqy0CzaCvTHXku/8vneXPt4V
        aNKFlQYN0KQLKw0aoEkXVho0QJMurDRogCZdWGnQAE26sNKgAZp0YaVBAzTpMp2M37PiIJHcQJMucePW
        y6hx49a4dfFKqt3AOz3VjtgBbDXJCfToE7evX6bq7est8QccLlD7Dzh4YoREX/I985ejbXxPSOdc/WXn
        spy/L6RL1Ov8fcL83Eb7gxIfiUQikUgkEolEIpFIJBK5ItnZ+Qc2pzpdqs8X6QAAAABJRU5ErkJggg==
</value>
  </data>
</root>